name: Build and Upload Simple

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels_linux:
    name: Build Linux wheels  
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython wheel setuptools build auditwheel
      
      - name: Build wheel
        run: |
          python setup.py bdist_wheel
      
      - name: Repair wheel for manylinux compatibility
        run: |
          # Try to repair the wheel, if it fails, just rename it
          auditwheel repair dist/*.whl --plat-tag manylinux_2_17_x86_64 -w wheelhouse/ || cp dist/*.whl wheelhouse/
          # Remove original if repair succeeded
          if ls wheelhouse/*manylinux*.whl 1> /dev/null 2>&1; then
            rm -f dist/*-linux_x86_64.whl
          else
            # If repair failed, rename manually
            for wheel in dist/*-linux_x86_64.whl; do
              if [ -f "$wheel" ]; then
                newname=$(echo "$wheel" | sed 's/-linux_x86_64.whl/-manylinux_2_17_x86_64.whl/')
                mv "$wheel" "$newname"
                mv "$newname" wheelhouse/
              fi
            done
          fi
      
      - name: Test wheel
        run: |
          pip install wheelhouse/*.whl
          python -c "import secretpackage; print('Test passed:', secretpackage.add(2, 3))"
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-${{ matrix.python-version }}
          path: wheelhouse/*.whl

  build_wheels_other:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython wheel setuptools build
      
      - name: Build wheel
        run: |
          python setup.py bdist_wheel
      
      - name: Test wheel
        run: |
          pip install dist/*.whl
          python -c "import secretpackage; print('Test passed:', secretpackage.add(2, 3))"
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  upload_to_pypi:
    name: Upload to PyPI
    needs: [build_wheels_linux, build_wheels_other]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List files
        run: ls -la dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true