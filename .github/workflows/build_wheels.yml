name: Build and Upload to PyPI

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Use cibuildwheel to build wheels for multiple Python versions at once
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Build for Python 3.8-3.12
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          # Skip 32-bit builds and musl linux
          CIBW_SKIP: "*-win32 *-musllinux_* *i686"
          # Install Cython before building
          CIBW_BEFORE_BUILD: pip install cython numpy
          # Test that the wheel works after building
          CIBW_TEST_COMMAND: python -c "import secretpackage; assert secretpackage.add(2, 3) == 5"
      
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # Only upload on tagged releases
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      
      - uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true